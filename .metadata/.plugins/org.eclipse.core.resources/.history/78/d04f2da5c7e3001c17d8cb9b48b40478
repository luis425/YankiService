package com.bootcamp.Yanki.api.client;

import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.client.WebClient;

import com.bootcamp.Yanki.config.BankAccountApiProperties;
import com.bootcamp.Yanki.response.BankAccountResponse;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
@RequiredArgsConstructor
public class BankAccountApiClient {

	private final WebClient webClient;
	private final BankAccountApiProperties bankAccountApiProperties;
	
	public List<BankAccountResponse> getBankAccountbyNumberAccount(String numberAccount) throws InterruptedException {
		ExecutorService executor = Executors.newSingleThreadExecutor();
		List<AssuranceResponse> result = new ArrayList<>();
		webClient.get().uri(assuranceApiProperties.getBaseUrl() + "/assurance/active")
				.accept(MediaType.TEXT_EVENT_STREAM).retrieve().bodyToFlux(AssuranceResponse.class)
				.publishOn(Schedulers.fromExecutor(executor))
				.subscribe(assuranceResponse -> result.add(assuranceResponse));

		executor.awaitTermination(1, TimeUnit.SECONDS);
		log.info("Assurance list " + result);
		return result;
	}
}

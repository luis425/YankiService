package com.bootcamp.Yanki.controller;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bootcamp.Yanki.model.YankiAccount;

import lombok.extern.slf4j.Slf4j;
import reactor.core.publisher.Mono;

@Slf4j
@RestController
@RequestMapping("/yankiAccountAct")
public class YankiController {

	@PostMapping
	public Mono<YankiAccount> createYankiAccount(@RequestBody YankiAccount yankiAccount) {

		boolean validationvalue = this.validationRegisterTypeBankAccountsRequest(typeBankAccounts);

		if (validationvalue) {

			try {

				var typeBankAccount = this.typeBankAccountsService.getTypeBankAccountsbyId(typeBankAccounts.getId());

				List<TypeBankAccounts> list1 = new ArrayList<>();

				typeBankAccount.flux().collectList().subscribe(list1::addAll);

				long temporizador = (5 * 1000);
				Thread.sleep(temporizador);

				log.info("Obtener valor para validar Id --->" + list1);

				codigoValidator = this.validardor(list1);

				if (codigoValidator != 0 && codigoValidator.equals(typeBankAccounts.getId())) {
					return Mono.error(new ResponseStatusException(HttpStatus.PRECONDITION_FAILED,
							"El Id de Tipo Cuenta Bancario ya existe"));
				} else {
					return this.typeBankAccountsService.createTypeBankAccounts(typeBankAccounts);
				}

			} catch (InterruptedException e) {
				log.info(e.toString());
				Thread.currentThread().interrupt();
				return Mono.error(new ResponseStatusException(HttpStatus.CONFLICT, e.getMessage()));
			}

		} else {
			return Mono.error(new ResponseStatusException(HttpStatus.BAD_REQUEST));
		}

	}
}
